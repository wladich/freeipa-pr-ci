---
# # Update Administrator's password
- hosts: ad-root,ad-child,ad-tree,ad-root-client
  gather_facts: no
  any_errors_fatal: true
  tasks:
    - name: set administrator password
      changed_when: yes
      ignore_errors: yes
      win_user:
        name: Administrator
        password: Secret123

- hosts: ad-root,ad-child,ad-tree,ad-root-client
  any_errors_fatal: true
  vars:
    ansible_user: Administrator
    ansible_password: Secret123
  roles:
    - windows/common

- hosts: ad-root
  any_errors_fatal: true
  vars:
    ansible_user: Administrator
    ansible_password: Secret123
  roles:
    - windows/ad-root

- hosts: ad-child,ad-tree
  any_errors_fatal: true
  vars:
    ansible_user: Administrator
    ansible_password: Secret123
  roles:
    - windows/ad-subdomain

- hosts: ad-root-client
  roles:
    - windows/ad-client

- hosts: ad-root
  any_errors_fatal: true
  tasks:
    - name: Force AES encryption types on a trust to child domain
      win_shell: ksetup /setenctypeattr "{{ ad_child_domain }}" RC4-HMAC-MD5 AES128-CTS-HMAC-SHA1-96 AES256-CTS-HMAC-SHA1-96

    - name: Force AES encryption types on a trust to tree domain
      win_shell: ksetup /setenctypeattr "{{ ad_tree_domain }}" RC4-HMAC-MD5 AES128-CTS-HMAC-SHA1-96 AES256-CTS-HMAC-SHA1-96

- hosts: ad-child,ad-tree
  any_errors_fatal: true
  tasks:
    - name: Force AES encryption types on a trust to parent domain
      win_shell: ksetup /setenctypeattr "{{ ad_root_domain }}" RC4-HMAC-MD5 AES128-CTS-HMAC-SHA1-96 AES256-CTS-HMAC-SHA1-96

- hosts: ad-root,ad-child,ad-tree
  vars:
    ansible_user: Administrator
    ansible_password: Secret123
  any_errors_fatal: true
  tasks:
    - name: create test data
      include_role:
        name: windows/ipa-ad-data

# Provision linux hosts but include ad and ad-child in the list so we can access
# their data to generate ipa test config file
- hosts: all
  gather_facts: yes
  roles:
    - role: machine/provision
      when: not inventory_hostname.startswith('ad')
